{"version":3,"sources":["components/NavBar.jsx","context.js","components/Spot.jsx","components/SurfMap.jsx","components/ControlPanel.jsx","components/Dashboard.jsx","App.js","Provider.jsx","index.js"],"names":["NavBar","className","href","Component","Context","createContext","BeginnerIcon","L","icon","iconUrl","process","iconSize","iconAnchor","popupAnchor","intIcon","expertIcon","Spot","props","getWindSpeed","latitude","longitude","axios","get","then","res","setState","wind_speed","data","wind","speed","state","county_name","spot_id","spot_name","this","difficulty","Calm","Beginner","marker","Intermediate","Expert","Marker","position","Popup","SurfMap","getSpots","spots","length","Map","center","zoom","style","height","TileLayer","attribution","url","Consumer","map","spot","spotIndex","key","ControlPanel","handleInputChange","event","target","checked","name","setDifficulty","level","levelIndex","type","onChange","htmlFor","Dashboard","App","Provider","Novice","value","children","ReactDOM","render","document","getElementById"],"mappings":"qPAIqBA,G,mLAEb,OACY,yBAAKC,UAAU,mFACX,uBAAGA,UAAU,eAAeC,KAAK,KAAjC,oB,GAJYC,c,iCCFvBC,EAAUC,0B,gCCKnBC,EAAeC,IAAEC,KAAK,CAExBC,QAASC,0CACTC,SAAU,CAAC,GAAI,IACfC,WAAY,CAAC,KAAM,IACnBC,YAAa,CAAC,GAAI,MAGhBC,EAAUP,IAAEC,KAAK,CAEnBC,QAASC,wCACTC,SAAU,CAAC,GAAI,IACfC,WAAY,CAAC,KAAM,IACnBC,YAAa,CAAC,GAAI,MAGhBE,EAAaR,IAAEC,KAAK,CAEtBC,QAASC,2CACTC,SAAU,CAAC,GAAI,IACfC,WAAY,CAAC,KAAM,IACnBC,YAAa,CAAC,GAAI,MAGCG,E,kDACnB,WAAYC,GAAQ,IAAD,8BACjB,gBAWFC,aAAe,SAACC,EAAUC,GAExBC,IACGC,IADH,8DAE2DH,EAF3D,gBAE2EA,EAF3E,kBAzCY,qCA6CTI,MAAK,SAAAC,GACJ,EAAKC,SAAS,CACZC,WAAkC,MAAtBF,EAAIG,KAAKC,KAAKC,YAlBhC,EAAKC,MAAQ,CACXC,YAAad,EAAMc,YACnBZ,SAAUF,EAAME,SAChBC,UAAWH,EAAMG,UACjBY,QAASf,EAAMe,QACfC,UAAWhB,EAAMgB,UACjBP,WAAY,GARG,E,gEA0BjBQ,KAAKhB,aAAagB,KAAKJ,MAAMX,SAAUe,KAAKJ,MAAMV,a,+BAG1C,IAAD,EACwCc,KAAKJ,MAA5CG,EADD,EACCA,UAAWF,EADZ,EACYA,YAAaL,EADzB,EACyBA,WADzB,EAIHQ,KAAKjB,MADPkB,WAAcC,EAHT,EAGSA,KAAMC,EAHf,EAGeA,SAGhBC,GANC,EAGyBC,aAHzB,EAGuCC,OAI5C,kBAACC,EAAA,EAAD,CACEC,SAAU,CAACR,KAAKJ,MAAMX,SAAUe,KAAKJ,MAAMV,WAC3CZ,KAAM0B,KAAKJ,MAAMJ,WAAa,GAAKpB,EAAe4B,KAAKJ,MAAMJ,WAAa,GAAKZ,EAAUC,EACzFd,UAAU,mBAEV,kBAAC0C,EAAA,EAAD,KACE,uBAAG1C,UAAU,gBACVgC,EAAY,KAAOF,EACpB,6BAFF,eAGeL,EAHf,SAIE,6BAJF,cAMGA,EAAa,GACV,QACAA,EAAa,GACb,YACAA,EAAa,GACb,gBACA,cAMZ,OAAIU,IAASC,EAAiBX,EAAa,IAAMY,GACvCF,GAAQC,EACTX,GAAc,IAAMA,EAAa,IAAMY,EACvCF,GAAQC,EAAiBX,EAAa,IAAMY,EAC9C,S,GAjEuBnC,aCzBbyC,E,kDACnB,aAAe,IAAD,8BACZ,gBAMFC,SAAW,WAGTxB,IACGC,IAAI,uDACJC,MAAK,SAAAC,GACJ,EAAKC,SAAS,CACZqB,MAAOtB,EAAIG,WAZjB,EAAKG,MAAQ,CACXgB,MAAO,IAHG,E,gEAoBZZ,KAAKW,a,+BAGG,IAAD,OAEP,OACE,oCACGX,KAAKJ,MAAMgB,MAAMC,OAChB,kBAACC,EAAA,EAAD,CACE/C,UAAU,MACVgD,OANc,CAAC,WAAY,YAO3BC,KAAM,EACNC,MAAO,CAAEC,OAAQ,SAEjB,kBAACC,EAAA,EAAD,CACEC,YAAY,0EACZC,IAAI,uDAEN,oCACE,kBAACnD,EAAQoD,SAAT,MACG,gBAAGrB,EAAH,EAAGA,WAAH,OACC,EAAKL,MAAMgB,MAAMW,KAAI,SACnBC,EACAC,GAFmB,OAInB,kBAAC,EAAD,eAAMC,IAAKD,GAAeD,EAA1B,CAAgCvB,WAAYA,aAOtD,oD,GArD2BhC,a,gBCH/B0D,E,4MACJ/B,MAAQ,CAAEM,MAAM,EAAOC,UAAU,EAAOE,cAAc,EAAOC,QAAQ,G,EAErEsB,kBAAoB,SAAAC,GAClB,IAAMC,EAASD,EAAMC,OACfC,EAAUD,EAAOC,QACjBC,EAAOF,EAAOE,KAEpB,EAAKzC,SAAL,eACGyC,EAAOD,IAGV,IAAM9B,EAAU,eAAQ,EAAKL,OAC7BK,EAAW+B,GAAQD,EACnB,EAAKhD,MAAMkD,cAAchC,I,uDAGjB,IAAD,OAGP,OACE,yBAAKlC,UAAU,iBAHF,CAAC,OAAQ,WAAY,eAAgB,UAIxCwD,KAAI,SAACW,EAAOC,GAAR,OACV,yBAAKpE,UAAU,+BAA+B2D,IAAKS,GACjD,2BACEpE,UAAU,mBACVqE,KAAK,WACLJ,KAAME,EACNH,QAAS,EAAKnC,MAAMsC,GACpBG,SAAU,EAAKT,oBAEjB,2BAAO7D,UAAU,mBAAmBuE,QAAQ,mBACzCJ,Y,GAhCYjE,aAyCZ,WAAAc,GAAK,OAClB,kBAACb,EAAQoD,SAAT,MACG,gBAAGW,EAAH,EAAGA,cAAH,OACC,kBAAC,EAAD,iBAAkBlD,EAAlB,CAAyBkD,cAAeA,SCzCzBM,E,uKAEjB,OACE,yBAAKxE,UAAU,aACb,yBAAKA,UAAU,4BACb,kBAAC,EAAD,OAEF,kBAAC,EAAD,W,GAP+BE,aCQxBuE,MATf,WACE,OACE,yBAAKzE,UAAU,OACb,kBAAC,EAAD,MACA,kBAAC,EAAD,QCqBS0E,G,kNA1Bb7C,MAAQ,CACNK,WAAY,CACVyC,QAAQ,EACRrC,cAAc,EACdC,QAAQ,I,EAIZ2B,cAAgB,SAAAhC,GACd,EAAKV,SAAS,CAAEU,gB,uDAIhB,OACE,kBAAC/B,EAAQuE,SAAT,CACEE,MAAO,CACL1C,WAAYD,KAAKJ,MAAMK,WACvBgC,cAAejC,KAAKiC,gBAGrBjC,KAAKjB,MAAM6D,c,GArBG3E,cCGvB4E,IAASC,OACP,kBAAC,EAAD,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.6a3a3c01.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport main from '../styles/main.scss'\r\n\r\nexport default class NavBar extends Component {\r\n    render() {\r\n        return (\r\n                    <nav className=\"navbar navbar-expand-lg navbar-dark bg-primary nav-bar-height custom-background\">\r\n                        <a className=\"navbar-brand\" href=\"#\">SurfSpotter</a>\r\n                    </nav>\r\n        )\r\n    }\r\n}\r\n","import { createContext } from \"react\";\r\n\r\nexport const Context = createContext();","import React, { Component } from \"react\";\r\nimport { Marker, Popup } from \"react-leaflet\";\r\nimport L from \"leaflet\";\r\nimport axios from \"axios\";\r\n\r\nvar owmApiKey = \"45337256c20dc4f994cf898688c17897\";\r\n\r\nvar BeginnerIcon = L.icon({\r\n  //SETS UP THE PIN ICON THAT IS USED TO PLOT MARKERS ON THE MAP\r\n  iconUrl: process.env.PUBLIC_URL + \"/markers/Green-marker.png\",\r\n  iconSize: [41, 41],\r\n  iconAnchor: [12.5, 41],\r\n  popupAnchor: [0, -41]\r\n});\r\n\r\nvar intIcon = L.icon({\r\n  //SETS UP THE PIN ICON THAT IS USED TO PLOT MARKERS ON THE MAP\r\n  iconUrl: process.env.PUBLIC_URL + \"/markers/Red-marker.png\",\r\n  iconSize: [41, 41],\r\n  iconAnchor: [12.5, 41],\r\n  popupAnchor: [0, -41]\r\n});\r\n\r\nvar expertIcon = L.icon({\r\n  //SETS UP THE PIN ICON THAT IS USED TO PLOT MARKERS ON THE MAP\r\n  iconUrl: process.env.PUBLIC_URL + \"/markers/Purple-marker.png\",\r\n  iconSize: [41, 41],\r\n  iconAnchor: [12.5, 41],\r\n  popupAnchor: [0, -41]\r\n});\r\n\r\nexport default class Spot extends Component {\r\n  constructor(props) {\r\n    super();\r\n    this.state = {\r\n      county_name: props.county_name,\r\n      latitude: props.latitude,\r\n      longitude: props.longitude,\r\n      spot_id: props.spot_id,\r\n      spot_name: props.spot_name,\r\n      wind_speed: 0\r\n    };\r\n  }\r\n\r\n  getWindSpeed = (latitude, longitude) => {\r\n    //THE FUNCTION TO POPULATE THE LIST OF SPOTS USING AXIOS\r\n    axios\r\n      .get(\r\n        `https://api.openweathermap.org/data/2.5/weather?lat=${latitude}&lon=${latitude}&appid=${owmApiKey}`\r\n      )\r\n      .then(res => {\r\n        this.setState({\r\n          wind_speed: res.data.wind.speed * 1.944\r\n        });\r\n      });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getWindSpeed(this.state.latitude, this.state.longitude);\r\n  }\r\n\r\n  render() {\r\n    const { spot_name, county_name, wind_speed } = this.state;\r\n    const {\r\n      difficulty: { Calm, Beginner, Intermediate, Expert }\r\n    } = this.props;\r\n\r\n    const marker = (\r\n      <Marker\r\n        position={[this.state.latitude, this.state.longitude]}\r\n        icon={this.state.wind_speed < 15 ? BeginnerIcon : this.state.wind_speed < 20 ? intIcon : expertIcon}\r\n        className=\"Beginner-marker\"\r\n      >\r\n        <Popup>\r\n          <p className=\"marker-label\">\r\n            {spot_name + \", \" + county_name}\r\n            <br />\r\n            Wind Speed: {wind_speed} knots\r\n            <br />\r\n            Difficulty:\r\n            {wind_speed < 15\r\n              ? \" Calm\"\r\n              : wind_speed < 20\r\n              ? \" Beginner\"\r\n              : wind_speed > 25\r\n              ? \" Intermediate\"\r\n              : \" Expert\"}\r\n          </p>\r\n        </Popup>\r\n      </Marker>\r\n    );\r\n\r\n    if (Calm && !Beginner) return wind_speed < 15 && marker;\r\n    else if (!Calm && Beginner)\r\n      return wind_speed >= 15 && wind_speed < 20 && marker;\r\n    else if (Calm && Beginner) return wind_speed < 25 && marker;\r\n    return null;\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Map, TileLayer } from \"react-leaflet\";\r\nimport axios from \"axios\";\r\nimport { Context } from \"../context\";\r\nimport Spot from \"./Spot\";\r\n\r\nexport default class SurfMap extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      spots: [] //THE ARRAY THAT WILL HOLD THE LIST OF SURFING SPOTS\r\n    };\r\n  }\r\n\r\n  getSpots = () => {\r\n    //THE FUNCTION TO POPULATE THE LIST OF SPOTS USING AXIOS\r\n\r\n    axios\r\n      .get(\"https://api.jsonbin.io/b/5e8733f193960d63f0782ad5/8\")\r\n      .then(res => {\r\n        this.setState({\r\n          spots: res.data\r\n        });\r\n      });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getSpots();\r\n  }\r\n\r\n  render() {\r\n    const startPosition = [36.778259, -119.417931]; //STARTING POSITION OF THE MAP\r\n    return (\r\n      <>\r\n        {this.state.spots.length ? (\r\n          <Map\r\n            className=\"map\"\r\n            center={startPosition}\r\n            zoom={5}\r\n            style={{ height: \"100%\" }}\r\n          >\r\n            <TileLayer\r\n              attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n              url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n            />\r\n            <>\r\n              <Context.Consumer>\r\n                {({ difficulty }) =>\r\n                  this.state.spots.map((\r\n                    spot,\r\n                    spotIndex //LOOP THROUGH THE LIST OF SPOTS AND CREATE A SPOT FOR EACH ONE TO BE PLOTTED ONTO THE MAP\r\n                  ) => (\r\n                    <Spot key={spotIndex} {...spot} difficulty={difficulty} />\r\n                  ))\r\n                }\r\n              </Context.Consumer>\r\n            </>\r\n          </Map>\r\n        ) : (\r\n          <p>loading data....</p>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/*\r\nrender() {\r\n    return (\r\n            <>\r\n            {this.state.spots.length ? \r\n                <Map className=\"map\" center={startPosition} zoom={5}>\r\n                    <TileLayer\r\n                        attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n                        url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n                        />\r\n                    {this.state.spots.map (spot => //LOOP THROUGH THE LIST OF SPOTS AND CREATE A SPOT FOR EACH ONE TO BE PLOTTED ONTO THE MAP\r\n                        <Spot {...spot} />\r\n                    )}\r\n                </Map>:\r\n                \r\n        <p>loading data....</p>}\r\n      </>\r\n            \r\n    )\r\n}*/\r\n","import React, { Component } from \"react\";\r\nimport { Context } from \"../context\";\r\n\r\nclass ControlPanel extends Component {\r\n  state = { Calm: false, Beginner: false, Intermediate: false, Expert: false };\r\n\r\n  handleInputChange = event => {\r\n    const target = event.target;\r\n    const checked = target.checked;\r\n    const name = target.name;\r\n\r\n    this.setState({\r\n      [name]: checked\r\n    });\r\n\r\n    const difficulty = { ...this.state };\r\n    difficulty[name] = checked;\r\n    this.props.setDifficulty(difficulty);\r\n  };\r\n\r\n  render() {\r\n    const levels = [\"Calm\", \"Beginner\", \"Intermediate\", \"Expert\"];\r\n\r\n    return (\r\n      <div className=\"control-panel\">\r\n        {levels.map((level, levelIndex) => (\r\n          <div className=\"form-check form-check-inline\" key={levelIndex}>\r\n            <input\r\n              className=\"form-check-input\"\r\n              type=\"checkbox\"\r\n              name={level}\r\n              checked={this.state[level]}\r\n              onChange={this.handleInputChange}\r\n            />\r\n            <label className=\"form-check-label\" htmlFor=\"inlineCheckbox1\">\r\n              {level}\r\n            </label>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default props => (\r\n  <Context.Consumer>\r\n    {({ setDifficulty }) => (\r\n      <ControlPanel {...props} setDifficulty={setDifficulty} />\r\n    )}\r\n  </Context.Consumer>\r\n);","import React, { Component } from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport SurfMap from \"./SurfMap.jsx\";\r\nimport ControlPanel from \"./ControlPanel.jsx\";\r\nimport main from \"../styles/main.scss\";\r\n\r\nexport default class Dashboard extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"dashboard\">\r\n        <div className=\"dashboard__control-panel\">\r\n          <ControlPanel />\r\n        </div>\r\n        <SurfMap />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\nimport NavBar from './components/NavBar.jsx';\nimport Dashboard from './components/Dashboard.jsx';\nimport SurfMap from './components/SurfMap.jsx'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <NavBar />\n      <Dashboard />\n    </div>\n  );\n}\n\nexport default App;\n","import React, { Component } from \"react\";\r\nimport { Context } from \"./context\";\r\n\r\nclass Provider extends Component {\r\n  state = {\r\n    difficulty: {\r\n      Novice: true,\r\n      Intermediate: false,\r\n      Expert: false\r\n    }\r\n  };\r\n\r\n  setDifficulty = difficulty => {\r\n    this.setState({ difficulty });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Context.Provider\r\n        value={{\r\n          difficulty: this.state.difficulty,\r\n          setDifficulty: this.setDifficulty\r\n        }}\r\n      >\r\n        {this.props.children}\r\n      </Context.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Provider;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"leaflet/dist/leaflet.css\";\nimport Provider from \"./Provider\";\n\nReactDOM.render(\n  <Provider>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n"],"sourceRoot":""}